<?xml version="1.0" encoding="UTF-8"?>
<ViewConfig>
  <Arguments/>
  <Context/>
  <Model>
    <DataType name="CertificateTypeRequired">
      <Property name="creationType">com.hcg.certificatesystem.model.CertificateTypeRequired</Property>
      <PropertyDef name="id">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <PropertyDef name="position">
        <Property name="dataType">Position</Property>
      </PropertyDef>
      <Reference name="certificateTypes">
        <Property name="dataType">[CertificateType]</Property>
        <Property name="dataProvider">certificateTypeRequiredDao#getCertificateTypes</Property>
        <Property name="parameter">$${this.id}</Property>
      </Reference>
    </DataType>
    <DataType name="CertificateTypeGroup">
      <Property name="creationType">com.hcg.certificatesystem.model.CertificateTypeGroup</Property>
      <PropertyDef name="id">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <PropertyDef name="certificateTypeGroupName">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <PropertyDef name="levels">
        <Property name="dataType">int</Property>
      </PropertyDef>
      <PropertyDef name="sortType">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <Reference name="certificateTypes">
        <Property name="dataProvider">certificateTypeGroupDao#getCertificateTypes</Property>
        <Property name="dataType">[CertificateType]</Property>
        <Property name="parameter">$${this.id}</Property>
      </Reference>
    </DataType>
    <DataType name="CertificateType">
      <Property name="creationType">com.hcg.certificatesystem.model.CertificateType</Property>
      <PropertyDef name="id">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <PropertyDef name="certificateTypeGroup">
        <Property name="dataType">CertificateTypeGroup</Property>
        <Property name="submittable">false</Property>
      </PropertyDef>
      <PropertyDef name="certificateTypeName">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <PropertyDef name="level">
        <Property name="dataType">int</Property>
      </PropertyDef>
      <PropertyDef name="validPeriod">
        <Property name="dataType">int</Property>
      </PropertyDef>
    </DataType>
    <DataType name="Position">
      <Property name="creationType">com.bstek.bdf2.core.model.DefaultPosition</Property>
      <PropertyDef name="id">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <PropertyDef name="name">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <PropertyDef name="desc">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <PropertyDef name="companyId">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <PropertyDef name="createDate">
        <Property name="dataType">Date</Property>
      </PropertyDef>
    </DataType>
    <DataType name="Department" parent="$dataTypeDept" meta="x:360;y:120">
      <Property name="creationType">com.bstek.bdf2.core.model.DefaultDept</Property>
      <PropertyDef name="id">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <PropertyDef name="name">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <PropertyDef name="desc">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <PropertyDef name="companyId">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <PropertyDef name="createDate">
        <Property name="dataType">Date</Property>
      </PropertyDef>
      <PropertyDef name="parentId">
        <Property name="dataType">String</Property>
      </PropertyDef>
      <Reference name="children">
        <Property name="dataProvider">bdf2.deptSelect#loadDepts</Property>
        <Property name="dataType">[Department]</Property>
        <Property name="parameter">$${this.id}</Property>
      </Reference>
    </DataType>
  </Model>
  <View>
    <DataSet id="dsCertificateTypeRequired">
      <Property name="dataProvider">certificateTypeRequiredDao#getCertificateTypeRequireds</Property>
      <Property name="dataType">[CertificateTypeRequired]</Property>
    </DataSet>
    <DataSet id="dsCertificateType">
      <Property name="dataType">[CertificateType]</Property>
      <Property name="dataProvider">certificateTypeRequiredDao#getCertificateTypes</Property>
    </DataSet>
    <DataSet id="dsCertificateTypeGroup">
      <Property name="dataProvider">certificateTypeGroupDao#getAll</Property>
      <Property name="dataType">[CertificateTypeGroup]</Property>
      <Property name="loadMode">lazy</Property>
    </DataSet>
    <DataSet id="dsDepartment">
      <Property name="dataType">[Department]</Property>
      <Property name="dataProvider">bdf2.deptMaintain#loadDepts</Property>
    </DataSet>
    <SplitPanel>
      <Property name="position">360</Property>
      <MainControl>
        <Container>
          <ToolBar>
            <DataPilot>
              <ClientEvent name="onSubControlAction">var datas = view.get(&quot;#dsCertificateType&quot;).get(&quot;data&quot;);
var dgCertificateType=view.get(&quot;#dgCertificateType&quot;);
var selection=dgCertificateType.get(&quot;selection&quot;);
var updateAction=view.get(&quot;#updateCertificateTypeRequired&quot;);
var messge;
switch(arg.code){
	case &quot;+&quot;:{
		view.get(&quot;#dlgCertificataType&quot;).show();
		arg.processDefault=false;
		break;
	}
	case &quot;-&quot;:{
		dgCertificateType.refresh();
		dorado.MessageBox.confirm(&quot;您真的想删除当前数据吗?&quot;,function(){	
			if (selection &amp;&amp; selection.length) {
				selection.each(function(data){
					datas.remove(data);
				});
			}else {message = &quot;未选中任何证书类型！&quot;;}
		});
		arg.processDefault=false;
		break;
	}
}


</ClientEvent>
              <Property name="dataSet">dsCertificateType</Property>
              <Property name="itemCodes">pages,+,-,x</Property>
            </DataPilot>
            <ToolBarButton>
              <ClientEvent name="onClick">var CertificateTypeRequiredTree=view.get(&quot;#CertificateTypeRequiredTree&quot;);&#xD;
var dgCertificateType=view.get(&quot;#dgCertificateType&quot;);&#xD;
var currentRequiredEntity=CertificateTypeRequiredTree.get(&quot;currentEntity&quot;);&#xD;
var requiredId=currentRequiredEntity.get(&quot;id&quot;);&#xD;
var updateAction=view.get(&quot;#updateCertificateTypeRequired&quot;);&#xD;
&#xD;
updateAction.set(&quot;parameter&quot;, {id:requiredId});&#xD;
updateAction.execute({&#xD;
	callback : function(success, obj){&#xD;
		if (success) {&#xD;
			dgCertificateType.refresh();&#xD;
        }&#xD;
		else{&#xD;
			alert(&quot;执行失败！发生异常：&quot; + obj);&#xD;
		}&#xD;
	}&#xD;
});</ClientEvent>
              <Property name="caption">保存</Property>
              <Property name="icon">url(>skin>common/icons.gif) -140px -20px</Property>
            </ToolBarButton>
          </ToolBar>
          <DataGrid id="dgCertificateType">
            <Property name="dataSet">dsCertificateType</Property>
            <Property name="dataType">CertificateType</Property>
            <Property name="readOnly">true</Property>
            <Property name="selectionMode">multiRows</Property>
            <IndicatorColumn/>
            <RowSelectorColumn/>
            <RowNumColumn/>
            <DataColumn>
              <Property name="name">id</Property>
              <Property name="property">id</Property>
              <Property name="visible">false</Property>
            </DataColumn>
            <DataColumn name="certificateTypeGroup">
              <Property name="property">certificateTypeGroup.certificateTypeGroupName</Property>
              <Property name="caption">所属证书组</Property>
            </DataColumn>
            <DataColumn>
              <Property name="name">certificateTypeName</Property>
              <Property name="property">certificateTypeName</Property>
              <Property name="caption">证书名称</Property>
            </DataColumn>
            <DataColumn>
              <Property name="name">level</Property>
              <Property name="property">level</Property>
              <Property name="caption">证书等级</Property>
            </DataColumn>
            <DataColumn>
              <Property name="name">validPeriod</Property>
              <Property name="property">validPeriod</Property>
              <Property name="visible">false</Property>
            </DataColumn>
          </DataGrid>
          <UpdateAction id="updateCertificateTypeRequired">
            <Property name="executingMessage">正在保存...</Property>
            <Property name="successMessage">保存成功!</Property>
            <Property name="dataResolver">certificateTypeRequiredDao#saveRequiredCertificateTypes</Property>
            <UpdateItem>
              <Property name="dataSet">dsCertificateType</Property>
              <Property name="dataPath">[#dirty]</Property>
            </UpdateItem>
          </UpdateAction>
        </Container>
      </MainControl>
      <SideControl>
        <SplitPanel>
          <Property name="position">180</Property>
          <MainControl>
            <DataTree id="CertificateTypeRequiredTree">
              <ClientEvent name="onClick">var CertificateTypeRequiredTree=view.get(&quot;#CertificateTypeRequiredTree&quot;);&#xD;
var currentRequiredEntity=CertificateTypeRequiredTree.get(&quot;currentEntity&quot;);&#xD;
var requiredId=currentRequiredEntity.get(&quot;id&quot;);&#xD;
var dsCertificateType=view.get(&quot;#dsCertificateType&quot;);&#xD;
&#xD;
dsCertificateType.set(&quot;parameter&quot;, {certificateTypeRequiredId:requiredId}).flushAsync();</ClientEvent>
              <Property name="currentNodeDataPath">currentCertificateTypeRequired</Property>
              <Property name="dataSet">dsCertificateTypeRequired</Property>
              <BindingConfigs>
                <BindingConfig>
                  <Property name="name">certificateTypeRequireds</Property>
                  <Property name="icon">url(>skin>common/icons.gif) -120px -80px</Property>
                  <Property name="labelProperty">position.name</Property>
                </BindingConfig>
              </BindingConfigs>
            </DataTree>
          </MainControl>
          <SideControl>
            <DataTree id="DepartmentTree" layoutConstraint="left">
              <ClientEvent name="onContextMenu">view.id(&quot;menuDepts&quot;).show({
	position:{
		left:arg.event.pageX,
		top:arg.event.pageY
	}
});</ClientEvent>
              <ClientEvent name="onDraggingSourceDrop">var draggingInfo=arg.draggingInfo;
if(!draggingInfo){
	return true;
}
var parentNode=draggingInfo.get(&quot;targetObject&quot;);
if(!parentNode){
	return true;
}
var parentId=parentNode.get(&quot;data.id&quot;);
parentNode.get(&quot;nodes&quot;).each(function(node){
	var data=node.get(&quot;data&quot;);
	data.set(&quot;parentId&quot;,parentId);
});
view.id(&quot;updateActionSaveDepts&quot;).execute();</ClientEvent>
              <ClientEvent name="beforeCurrentChange">var node=arg.oldCurrent;
if(node){
	var data=node.get(&quot;data&quot;);
	if(data &amp;&amp; data.state!=dorado.Entity.STATE_NONE){
		view.id(&quot;updateActionSaveDepts&quot;).execute();
		if(data.validate()!=&quot;ok&quot;){
			arg.processDefault=false;
		}
	}
}</ClientEvent>
              <ClientEvent name="onClick">var DepartmentTree=view.get(&quot;#DepartmentTree&quot;);
var currentDepartmentEntity=DepartmentTree.get(&quot;currentEntity&quot;);
var departmentId=currentDepartmentEntity.get(&quot;id&quot;);
var dsCertificateTypeRequired=view.get(&quot;#dsCertificateTypeRequired&quot;);

dsCertificateTypeRequired.set(&quot;parameter&quot;, {id:departmentId}).flushAsync();

</ClientEvent>
              <Property name="dataSet">dsDepartment</Property>
              <Property name="defaultIcon"> url(>skin>common/icons.gif) -260px -40px</Property>
              <Property name="currentNodeDataPath">CurrentDept</Property>
              <Property name="draggable">true</Property>
              <Property name="dragTags">dept</Property>
              <Property name="droppableTags">dept</Property>
              <Property name="droppable">true</Property>
              <Property name="dropMode">onOrInsertItems</Property>
              <Property name="allowNoCurrent">true</Property>
              <BindingConfigs>
                <BindingConfig>
                  <Property name="recursive">true</Property>
                  <Property name="expandLevel">1</Property>
                  <Property name="labelProperty">name</Property>
                  <Property name="icon">url(>skin>common/icons.gif) 0px -20px</Property>
                  <Property name="childrenProperty">children</Property>
                </BindingConfig>
              </BindingConfigs>
            </DataTree>
          </SideControl>
        </SplitPanel>
      </SideControl>
    </SplitPanel>
    <Dialog id="dlgCertificataType">
      <Property name="caption">选择证书种类</Property>
      <Property name="width">800</Property>
      <Property name="height">500</Property>
      <Buttons/>
      <Children>
        <ToolBar>
          <ToolBarButton>
            <ClientEvent name="onClick">var dgCertificateTypeSelect=view.get(&quot;#dgCertificateTypeSelect&quot;);&#xD;
var dgCertificateType=view.get(&quot;#dgCertificateType&quot;);&#xD;
var datas = view.get(&quot;#dsCertificateType&quot;).get(&quot;data&quot;);&#xD;
var selection=dgCertificateTypeSelect.get(&quot;selection&quot;);&#xD;
var messge;&#xD;
&#xD;
if (selection &amp;&amp; selection.length){&#xD;
	selection.each(function(data){&#xD;
		var isAdded=false;&#xD;
		datas.each(function(dataAdded){&#xD;
			if(dataAdded.get(&quot;id&quot;)==data.get(&quot;id&quot;)){&#xD;
				isAdded=true;&#xD;
			}&#xD;
		});&#xD;
		if(isAdded==false){&#xD;
			datas.insert(data.toJSON());&#xD;
		}&#xD;
		dgCertificateType.refresh();&#xD;
	});&#xD;
}&#xD;
else {&#xD;
	message = &quot;未选中任何证书类型！&quot;;&#xD;
	dorado.MessageBox.alert(message);&#xD;
}&#xD;
&#xD;
</ClientEvent>
            <Property name="caption">确定</Property>
            <Property name="icon">url(>skin>common/icons.gif) -20px 0px</Property>
          </ToolBarButton>
          <ToolBarButton>
            <Property name="caption">取消</Property>
            <Property name="icon">url(>skin>common/icons.gif) -40px 0px</Property>
          </ToolBarButton>
        </ToolBar>
        <SplitPanel>
          <Property name="position">260</Property>
          <MainControl>
            <Container>
              <DataGrid id="dgCertificateTypeSelect">
                <Property name="dataPath">!currentCertificateTypeGroup.certificateTypes</Property>
                <Property name="dataSet">dsCertificateTypeGroup</Property>
                <Property name="dataType">CertificateType</Property>
                <Property name="filterMode">clientSide</Property>
                <Property name="readOnly">true</Property>
                <Property name="scrollMode">lazyRender</Property>
                <Property name="selectionMode">multiRows</Property>
                <RowSelectorColumn/>
                <RowNumColumn/>
                <DataColumn>
                  <Property name="name">certificateTypeName</Property>
                  <Property name="property">certificateTypeName</Property>
                  <Property name="caption">证书名称</Property>
                </DataColumn>
                <DataColumn>
                  <Property name="name">level</Property>
                  <Property name="property">level</Property>
                  <Property name="caption">证书等级</Property>
                </DataColumn>
                <DataColumn>
                  <Property name="name">validPeriod</Property>
                  <Property name="property">validPeriod</Property>
                  <Property name="caption">有效期</Property>
                </DataColumn>
              </DataGrid>
            </Container>
          </MainControl>
          <SideControl>
            <Container>
              <DataTree id="CertificateTypeGroupTree">
                <Property name="dataSet">dsCertificateTypeGroup</Property>
                <Property name="currentNodeDataPath">currentCertificateTypeGroup</Property>
                <BindingConfigs>
                  <BindingConfig>
                    <Property name="name">certificateTypeGroups</Property>
                    <Property name="labelProperty">certificateTypeGroupName</Property>
                    <Property name="icon">url(>skin>common/icons.gif) -260px -40px</Property>
                  </BindingConfig>
                </BindingConfigs>
              </DataTree>
            </Container>
          </SideControl>
        </SplitPanel>
      </Children>
      <Tools/>
    </Dialog>
  </View>
</ViewConfig>
